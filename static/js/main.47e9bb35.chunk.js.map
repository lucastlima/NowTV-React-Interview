{"version":3,"sources":["images/lucas.jpg","data.js","service.js","components/Topbar.js","components/ArrowSvg.js","components/Profile.js","components/Sidebar.js","components/Layout.js","components/Chat.js","components/BreakLine.js","utils/utils.js","components/Message.js","components/Loader.js","App.js","utils/GlobalStyle.js","serviceWorker.js","index.js"],"names":["module","exports","randomDelayPromise","data","delay","Math","floor","random","Promise","resolve","setTimeout","getChatLog","a","all","require","req","users","messages","json","map","m","user","find","u","id","userId","messageId","fullName","firstName","lastName","timestamp","email","message","avatar","sortedJson","sort","b","Date","valueOf","StyledTopBar","styled","div","Topbar","ArrowSvg","width","height","fill","viewBox","d","transform","StyledProfile","popup","Profile","className","src","lucas","alt","href","target","rel","StyledSideBar","Sidebar","useState","setPopup","onClick","LayoutStyled","ContentWrapper","Layout","children","StyledChat","Chat","React","forwardRef","ref","StyledBreakLine","BreakLine","date","weekDay","day","month","year","handleDate","hour","getHours","toString","padStart","min","getMinutes","sec","getSeconds","getDay","getDate","getFullYear","getMonth","StyledMessage","Message","msg","popUpTime","slice","data-popup","StyledLoader","Loader","props","stroke","strokeWidth","fillRule","strokeOpacity","cx","cy","r","attributeName","type","from","to","dur","repeatCount","defaultProps","undefined","App","setData","isLoading","setIsLoading","chatDiv","createRef","useEffect","getData","current","scrollIntoView","addBreakLine","memoDate","i","Fragment","key","console","log","createGlobalStyle","Boolean","window","location","hostname","match","ReactDOM","render","GlobalStyle","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,mC,q48BCE3C,SAASC,EAAmBC,GAC1B,IAAMC,EAAQC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,IAChD,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,YAAW,kBAAMD,EAAQN,KAAOC,MCQzD,IAAMO,EAAU,uCAAG,oCAAAC,EAAA,sEACNJ,QAAQK,IAAI,CDDvBX,EAAmBY,EAAQ,KAJ3BZ,EAAmBY,EAAQ,OCIV,cAClBC,EADkB,OAElBC,EAAQD,EAAI,GACZE,EAAWF,EAAI,GAGfG,EAAOD,EAASE,KAAI,SAAAC,GACxB,IAAMC,EAAOL,EAAMM,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOJ,EAAEK,UACxC,MAAO,CACLC,UAAWN,EAAEI,GACbC,OAAQJ,EAAKG,GACbG,SAAS,GAAD,OAAKN,EAAKO,UAAV,YAAuBP,EAAKQ,UACpCC,UAAWV,EAAEU,UACbC,MAAOV,EAAKU,MACZC,QAASZ,EAAEY,QAEXC,OAAO,+BAAD,OAAiCZ,EAAKG,QAI1CU,EAAahB,EAAKiB,MAAK,SAACvB,EAAGwB,GAG/B,OAFW,IAAIC,KAAKzB,EAAEkB,WAAWQ,UACtB,IAAID,KAAKD,EAAEN,WAAWQ,aAtBX,kBA0BjBJ,GA1BiB,2CAAH,qD,8MCTvB,IAAMK,EAAeC,IAAOC,IAAV,KAeHC,MARf,WACE,OACE,kBAACH,EAAD,KACE,iDCCSI,MAZf,WACE,OACE,yBAAKC,MAAM,OAAOC,OAAO,OAAOC,KAAK,QAAQC,QAAQ,iBACnD,wCACA,0BACEC,EAAE,0QACFC,UAAU,0B,gwCCJlB,IAAMC,EAAgBV,IAAOC,IAAV,KAGH,qBAAGU,MAAqB,UAAY,YACvC,qBAAGA,MAAqB,EAAI,KAyH1BC,MAtDf,YAA6B,IAAVD,EAAS,EAATA,MACjB,OACE,kBAACD,EAAD,CAAeC,MAAOA,GACpB,yBAAKE,UAAU,cACb,yBAAKA,UAAU,cACb,yBAAKC,IAAKC,IAAOC,IAAI,WAEvB,yBAAKH,UAAU,YACb,0CACA,8BACE,uBAAGI,KAAK,iCAAR,2BAEF,0BAAMJ,UAAU,SACd,uBAAGI,KAAK,mBAAR,kBAIN,6BACA,yBAAKJ,UAAU,WACb,uCACA,2BACE,uBACEI,KAAK,gCACLC,OAAO,SACPC,IAAI,uBAHN,kCAQF,yCACA,2BACE,uBACEF,KAAK,mDACLC,OAAO,SACPC,IAAI,uBAHN,wBAQF,6CACA,2BACE,uBACEF,KAAK,sDACLC,OAAO,SACPC,IAAI,uBAHN,6B,6sBC/GV,IAAMC,EAAgBpB,IAAOC,IAAV,KA0EJoB,MA5Bf,WAAoB,IAAD,EACSC,oBAAS,GADlB,mBACVX,EADU,KACHY,EADG,KAMjB,OACE,kBAACH,EAAD,KACE,yBAAKP,UAAU,aACb,yBAAKA,UAAU,UAAUW,QAPX,WAClBD,GAAUZ,KAOJ,wBAAI3B,GAAG,QAAP,UACA,yBAAKA,GAAG,SACN,kBAAC,EAAD,QAGJ,kBAAC,EAAD,CAAS2B,MAAOA,KAElB,4BACE,0BAAME,UAAU,iBAAhB,UADF,cAGA,yBAAKA,UAAU,WACb,wCACA,kD,8PCpER,IAAMY,EAAezB,IAAOC,IAAV,KAMZyB,EAAiB1B,IAAOC,IAAV,KAkBL0B,MAZf,YAA+B,IAAbC,EAAY,EAAZA,SAChB,OACE,kBAACH,EAAD,KACE,kBAAC,EAAD,MACA,kBAACC,EAAD,KACE,kBAAC,EAAD,MACCE,K,wMCpBT,IAAMC,EAAa7B,IAAOC,IAAV,KAoBD6B,EATFC,IAAMC,YAAW,WAAeC,GAAS,IAArBL,EAAoB,EAApBA,SAC/B,OACE,kBAACC,EAAD,CAAY7C,GAAG,QACZ4C,EACD,yBAAKf,UAAU,WAAWoB,IAAKA,Q,8WCfrC,IAAMC,EAAkBlC,IAAOC,IAAV,KA0BNkC,EARG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,kBAACF,EAAD,KACE,6BACA,wCAAUE,EAAKC,QAAf,aAA2BD,EAAKE,IAAhC,YAAuCF,EAAKG,MAA5C,YAAqDH,EAAKI,OAC1D,+BCtBSC,EAAa,SAAAjC,GACxB,IAAM4B,EAAO,IAAIvC,KAAKW,GAChBkC,EAAON,EACVO,WACAC,WACAC,SAAS,EAAG,KACTC,EAAMV,EACTW,aACAH,WACAC,SAAS,EAAG,KACTG,EAAMZ,EACTa,aACAL,WACAC,SAAS,EAAG,KACTR,EAAUD,EAAKc,SACfZ,EAAMF,EAAKe,UACXX,EAAOJ,EAAKgB,cACZb,EAAQH,EAAKiB,WA2BnB,MAAO,CACLX,OACAI,MACAE,MACAX,QAde,CACf,SACA,SACA,UACA,YACA,WACA,SACA,YAOkBA,GAClBC,MACAC,MA/Ba,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAmBcA,GACdC,S,i7DClDJ,IAAMc,EAAgBtD,IAAOC,IAAV,KAwHJsD,EArBC,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAAU,EACYf,EAAWe,EAAIlE,WAA9CoD,EADmB,EACnBA,KAAMI,EADa,EACbA,IAAKR,EADQ,EACRA,IAAKC,EADG,EACHA,MAAOS,EADJ,EACIA,IACzBS,EAAS,UAAMnB,EAAN,YAAaC,EAAMmB,MAAM,EAAG,GAA5B,eAAqChB,EAArC,YAA6CI,EAA7C,YAAoDE,GACnE,OACE,kBAACM,EAAD,KACE,yBAAKK,aAAYH,EAAIjE,MAAOsB,UAAU,UACpC,yBAAKC,IAAK0C,EAAI/D,OAAQuB,IAAKwC,EAAIrE,YAEjC,yBAAK0B,UAAU,eACb,yBAAKA,UAAU,YACb,4BAAK2C,EAAIrE,UACT,2BAAOwE,aAAYF,EAAWzE,GAAG,YAAjC,UAAgD0D,EAAhD,YAAwDI,KAE1D,yBAAKjC,UAAU,eACb,2BAAI2C,EAAIhE,a,iKClHlB,IAAMoE,EAAe5D,IAAOC,IAAV,KAOZ4D,EAAS,SAAC,GAAD,IAAGhD,EAAH,EAAGA,UAAciD,EAAjB,oCACb,kBAACF,EAAD,KACE,uCACExD,MAAO,GACPC,OAAQ,GACR0D,OAAO,UACPxD,QAAQ,YACRM,UAAS,yBAAoBA,EAAS,WAAOA,GAAc,KACvDiD,GAEJ,uBACErD,UAAU,iBACVuD,YAAa,EACb1D,KAAK,OACL2D,SAAS,WAET,4BAAQC,cAAe,GAAKC,GAAI,GAAIC,GAAI,GAAIC,EAAG,KAC/C,0BAAM7D,EAAE,+BACN,sCACE8D,cAAc,YACdC,KAAK,SACLC,KAAK,UACLC,GAAG,YACHC,IAAI,KACJC,YAAY,oBAQxBd,EAAOe,aAAe,CACpB/D,eAAWgE,GAGEhB,QCDAiB,MArCf,WAAgB,IAAD,EACWxD,mBAAS,IADpB,mBACN3D,EADM,KACAoH,EADA,OAEqBzD,oBAAS,GAF9B,mBAEN0D,EAFM,KAEKC,EAFL,KAGPC,EAAUnD,IAAMoD,YAEtBC,qBAAU,YACK,uCAAG,4BAAAhH,EAAA,sEACKD,IADL,OACRR,EADQ,OAEdoH,EAAQpH,GACRsH,GAAa,GAHC,2CAAH,qDAKbI,KACC,IAEHD,qBAAU,WACJF,EAAQI,SACVJ,EAAQI,QAAQC,mBAEjB,CAACL,IAEJ,IAAMM,EH8BgB,WACtB,IAAIlD,EAAM,KACV,OAAO,SAAA9B,GACL,IAAM4B,EAAOK,EAAWjC,GACxB,OAAI8B,IAAQF,EAAKE,KACfA,EAAMF,EAAKE,IACJ,kBAAC,EAAD,CAAWF,KAAMA,KAEjB,MGtCUqD,GAEfhH,EAAWd,EAAKgB,KAAI,SAACC,EAAG8G,GAAJ,OACxB,kBAAC,IAAMC,SAAP,CAAgBC,IAAKhH,EAAEM,WACpBsG,EAAa5G,EAAEU,WACfuG,QAAQC,WAAWJ,GACpB,kBAAC,EAAD,CAASlC,IAAK5E,QAIlB,OACE,kBAAC,EAAD,KACGoG,EAAY,kBAAC,EAAD,MAAa,kBAAC,EAAD,CAAM/C,IAAKiD,GAAUzG,K,+WCtCtCsH,kBAAf,KCUoBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,oCACE,kBAAC,EAAD,MACA,kBAACC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.47e9bb35.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lucas.f98a80b2.jpg\";","// DO NOT MODIFY\n\nfunction randomDelayPromise(data) {\n  const delay = Math.floor(Math.random() * 400) + 100;\n  return new Promise(resolve => setTimeout(() => resolve(data), delay));\n}\n\nexport function getMessages() {\n  return randomDelayPromise(require('./messages.json'));\n}\n\nexport function getMembers() {\n  return randomDelayPromise(require('./members.json'));\n}\n","import { getMessages, getMembers } from \"./data\";\n\n// {\n//   \"messageId\": \"12356\",\n//   \"userId\": \"613651251\",\n//   \"fullName\": \"Robin Balmforth\",\n//   \"timestamp\": \"2017-02-23T14:57:20.629Z\",\n//   \"email\": \"robin@example.com\",\n//   \"message\": \"Hello, World!\",\n//   \"avatar\": null\n// },\n\nexport const getChatLog = async () => {\n  const req = await Promise.all([getMembers(), getMessages()]);\n  const users = req[0];\n  const messages = req[1];\n\n  //Using a different avatar, hope you don't mind... =)\n  const json = messages.map(m => {\n    const user = users.find(u => u.id === m.userId);\n    return {\n      messageId: m.id,\n      userId: user.id,\n      fullName: `${user.firstName} ${user.lastName}`,\n      timestamp: m.timestamp,\n      email: user.email,\n      message: m.message,\n      //avatar: user.avatar\n      avatar: `https://i.pravatar.cc/150?u=${user.id}`\n    };\n  });\n\n  const sortedJson = json.sort((a, b) => {\n    const aa = new Date(a.timestamp).valueOf();\n    const bb = new Date(b.timestamp).valueOf();\n    return aa - bb;\n  });\n\n  return sortedJson;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledTopBar = styled.div`\n  display: flex;\n  width: 100%;\n  box-shadow: rgba(29, 28, 29, 0.13) 0px -1px 0px 0px inset;\n  padding: 0.8rem 1rem;\n`;\n\nfunction Topbar() {\n  return (\n    <StyledTopBar>\n      <h3>#interview-test</h3>\n    </StyledTopBar>\n  );\n}\n\nexport default Topbar;\n","import React from \"react\";\n\nfunction ArrowSvg() {\n  return (\n    <svg width=\"100%\" height=\"100%\" fill=\"white\" viewBox=\"0 0 492 290.6\">\n      <title>arrow</title>\n      <path\n        d=\"M484.13,125,468,108.76a27,27,0,0,0-38.07,0L246.11,292.61l-184-184.06a27,27,0,0,0-38.07,0L7.87,124.68a27,27,0,0,0,0,38.06L227,382.67c5.06,5.06,11.81,8.63,19.08,8.63h.09c7.21,0,14-3.57,19-8.63L484.13,163.34A27.23,27.23,0,0,0,492,144.11,26.91,26.91,0,0,0,484.13,125Z\"\n        transform=\"translate(0 -100.7)\"\n      />\n    </svg>\n  );\n}\n\nexport default ArrowSvg;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport lucas from \"../images/lucas.jpg\";\n\nconst StyledProfile = styled.div`\n  display: flex;\n  flex-direction: column;\n  visibility: ${({ popup }) => (popup ? \"visible\" : \"hidden\")};\n  opacity: ${({ popup }) => (popup ? 1 : 0)};\n  position: absolute;\n  left: 0;\n  top: 2.2rem;\n  z-index: 10;\n  width: 15rem;\n  transition: all 0.2s ease-in;\n  background-color: white;\n  color: black;\n  font-size: 0.6rem;\n  border-radius: 0.5rem;\n  padding: 1rem;\n  box-shadow: rgba(29, 28, 29, 0.13) 0px 0px 0px 1px,\n    rgba(0, 0, 0, 0.12) 0px 4px 12px 0px;\n\n  & a {\n    text-decoration: none;\n    color: inherit;\n    cursor: pointer;\n  }\n\n  & .pop-header {\n    display: flex;\n    margin-bottom: 0.5rem;\n    & .pop-info {\n      padding: 0 0.5rem;\n      & h2 {\n        line-height: 1rem;\n        margin: 0;\n      }\n    }\n    & img {\n      display: block;\n      width: 3rem;\n      height: auto;\n      border-radius: 3px;\n      object-fit: cover;\n    }\n  }\n\n  .pop-info {\n    display: flex;\n    flex-direction: column;\n\n    & .phone {\n      font-size: 0.7rem;\n    }\n  }\n\n  & span,\n  p {\n    font-size: 0.8rem;\n    color: #1d1c1db3;\n  }\n\n  & hr {\n    width: 100%;\n    height: 1px;\n    border: none;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  }\n\n  & .content {\n    padding: 0.5rem 0;\n  }\n`;\n\nfunction Profile({ popup }) {\n  return (\n    <StyledProfile popup={popup}>\n      <div className=\"pop-header\">\n        <div className=\"pop-avatar\">\n          <img src={lucas} alt=\"Lucas\" />\n        </div>\n        <div className=\"pop-info\">\n          <h2>Lucas Lima</h2>\n          <span>\n            <a href=\"mailto:lucastlima86@gmail.com\">lucastlima86@gmail.com</a>\n          </span>\n          <span className=\"phone\">\n            <a href=\"tel:07495751803\">07495751803</a>\n          </span>\n        </div>\n      </div>\n      <hr />\n      <div className=\"content\">\n        <h2>Github:</h2>\n        <p>\n          <a\n            href=\"https://github.com/lucastlima\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            https://github.com/lucastlima\n          </a>\n        </p>\n        <h2>LinkedIn:</h2>\n        <p>\n          <a\n            href=\"https://www.linkedin.com/in/lucas-lima-14850993/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            lucas-lima-14850993\n          </a>\n        </p>\n        <h2>Project Repo:</h2>\n        <p>\n          <a\n            href=\"https://github.com/lucastlima/NowTV-React-Interview\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            NowTV-React-Interview\n          </a>\n        </p>\n      </div>\n    </StyledProfile>\n  );\n}\n\nexport default Profile;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport ArrowSvg from \"./ArrowSvg\";\nimport Profile from \"./Profile\";\n\nconst StyledSideBar = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 16rem;\n  background-color: #3f0e40;\n  padding: 1rem;\n  color: white;\n\n  & h5,\n  h4 {\n    color: #bcabbc;\n  }\n\n  .online-status {\n    color: #2bac76;\n    margin-right: 0.2rem;\n  }\n\n  .sb-header {\n    display: flex;\n    position: relative;\n    & .sb-logo {\n      display: flex;\n    }\n\n    #logo {\n      cursor: pointer;\n    }\n\n    #arrow {\n      width: 0.6rem;\n      margin-left: 0.2rem;\n      cursor: pointer;\n      svg {\n        height: 0.6rem;\n      }\n    }\n  }\n\n  .sb-menu {\n    display: flex;\n    flex-direction: column;\n    padding-top: 5rem;\n  }\n`;\n\nfunction Sidebar() {\n  const [popup, setPopup] = useState(false);\n  const handleClick = () => {\n    setPopup(!popup);\n  };\n\n  return (\n    <StyledSideBar>\n      <div className=\"sb-header\">\n        <div className=\"sb-logo\" onClick={handleClick}>\n          <h3 id=\"logo\">NOW TV</h3>\n          <div id=\"arrow\">\n            <ArrowSvg />\n          </div>\n        </div>\n        <Profile popup={popup} />\n      </div>\n      <h5>\n        <span className=\"online-status\">&#9864;</span>Lucas Lima\n      </h5>\n      <div className=\"sb-menu\">\n        <h4>Channels</h4>\n        <h5>#interview-test</h5>\n      </div>\n    </StyledSideBar>\n  );\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Topbar from \"./Topbar\";\nimport Sidebar from \"./Sidebar\";\n\nconst LayoutStyled = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n`;\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nfunction Layout({ children }) {\n  return (\n    <LayoutStyled>\n      <Sidebar />\n      <ContentWrapper>\n        <Topbar />\n        {children}\n      </ContentWrapper>\n    </LayoutStyled>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledChat = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  overflow-y: auto;\n\n  .dummyDiv {\n    min-height: 2rem;\n  }\n`;\n\nconst Chat = React.forwardRef(({ children }, ref) => {\n  return (\n    <StyledChat id=\"chat\">\n      {children}\n      <div className=\"dummyDiv\" ref={ref}></div>\n    </StyledChat>\n  );\n});\n\nexport default Chat;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledBreakLine = styled.div`\n  display: flex;\n  align-items: center;\n  min-height: 3rem;\n  & hr {\n    width: 100%;\n    height: 1px;\n    border: none;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  }\n  & span {\n    font-size: 0.8rem;\n    font-weight: bold;\n    margin: 0 1rem;\n    white-space: nowrap;\n  }\n`;\n\nconst BreakLine = ({ date }) => (\n  <StyledBreakLine>\n    <hr />\n    <span>{`${date.weekDay}, ${date.day} ${date.month} ${date.year}`}</span>\n    <hr />\n  </StyledBreakLine>\n);\n\nexport default BreakLine;\n","import React from \"react\"; //JSX\nimport BreakLine from \"../components/BreakLine\";\n\nexport const handleDate = d => {\n  const date = new Date(d);\n  const hour = date\n    .getHours()\n    .toString()\n    .padStart(2, \"0\");\n  const min = date\n    .getMinutes()\n    .toString()\n    .padStart(2, \"0\");\n  const sec = date\n    .getSeconds()\n    .toString()\n    .padStart(2, \"0\");\n  const weekDay = date.getDay();\n  const day = date.getDate();\n  const year = date.getFullYear();\n  const month = date.getMonth();\n\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ];\n\n  const weekDays = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ];\n\n  return {\n    hour,\n    min,\n    sec,\n    weekDay: weekDays[weekDay],\n    day,\n    month: months[month],\n    year\n  };\n};\n\nexport const memoDate = () => {\n  let day = null;\n  return d => {\n    const date = handleDate(d);\n    if (day !== date.day) {\n      day = date.day;\n      return <BreakLine date={date} />;\n    } else {\n      return null;\n    }\n  };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { handleDate } from \"../utils/utils\";\n\nconst StyledMessage = styled.div`\n  display: flex;\n  padding: 0.5rem 0;\n\n  .avatar {\n    width: 2rem;\n    min-width: 2rem;\n    cursor: pointer;\n\n    img {\n      display: block;\n      width: 100%;\n      height: auto;\n      border-radius: 3px;\n      object-fit: cover;\n    }\n  }\n  .msg-content {\n    display: flex;\n    flex-direction: column;\n    padding: 0 0.5rem;\n    .msg-name {\n      display: flex;\n      & h4 {\n        margin-top: 0;\n        line-height: 1rem;\n      }\n      & small {\n        margin-left: 0.5rem;\n        color: #616061;\n        cursor: pointer;\n      }\n    }\n    .msg-message {\n      display: flex;\n    }\n  }\n\n  [data-popup] {\n    position: relative;\n    &:before,\n    &:after {\n      opacity: 0;\n      transform: translate(-50%, 0);\n      transition: 0.15s ease opacity, 0.15s ease transform;\n      will-change: opacity transform;\n      content: \"\";\n    }\n    &:hover {\n      &:before,\n      &:after {\n        position: absolute;\n        left: 50%;\n        transform: translate(-50%, -10px);\n        opacity: 1;\n      }\n      &:before {\n        bottom: 100%;\n        padding: 5px 10px;\n        background: rgba(0, 0, 0, 0.8);\n        border-radius: 5px;\n        color: white;\n        font-size: 12px;\n        line-height: 12px;\n        text-align: center;\n        content: attr(data-popup);\n        white-space: nowrap;\n      }\n      &:after {\n        top: 0;\n        height: 0;\n        width: 0;\n        border: solid transparent;\n        border-top-color: rgba(0, 0, 0, 0.8);\n        border-width: 5px;\n        content: \"\";\n      }\n    }\n  }\n\n  .avatar {\n    &:before,\n    &:after {\n      transform: none;\n    }\n\n    &:hover {\n      &:before {\n        left: 0;\n        transform: translateY(-10px);\n      }\n      &:after {\n        left: calc(50% - 5px);\n        transform: translate(0, -10px);\n      }\n    }\n  }\n`;\n\nconst Message = ({ msg }) => {\n  const { hour, min, day, month, sec } = handleDate(msg.timestamp);\n  const popUpTime = `${day} ${month.slice(0, 3)} at ${hour}:${min}:${sec}`;\n  return (\n    <StyledMessage>\n      <div data-popup={msg.email} className=\"avatar\">\n        <img src={msg.avatar} alt={msg.fullName} />\n      </div>\n      <div className=\"msg-content\">\n        <div className=\"msg-name\">\n          <h4>{msg.fullName}</h4>\n          <small data-popup={popUpTime} id=\"msg-time\">{`${hour}:${min}`}</small>\n        </div>\n        <div className=\"msg-message\">\n          <p>{msg.message}</p>\n        </div>\n      </div>\n    </StyledMessage>\n  );\n};\n\nexport default Message;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledLoader = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Loader = ({ className, ...props }) => (\n  <StyledLoader>\n    <svg\n      width={60}\n      height={60}\n      stroke=\"#d3d3d3\"\n      viewBox=\"0 0 38 38\"\n      className={`svg-loaders-svg${className ? ` ${className}` : ''}`}\n      {...props}\n    >\n      <g\n        transform=\"translate(1 1)\"\n        strokeWidth={2}\n        fill=\"none\"\n        fillRule=\"evenodd\"\n      >\n        <circle strokeOpacity={0.5} cx={18} cy={18} r={18} />\n        <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n          <animateTransform\n            attributeName=\"transform\"\n            type=\"rotate\"\n            from=\"0 18 18\"\n            to=\"360 18 18\"\n            dur=\"1s\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n      </g>\n    </svg>\n  </StyledLoader>\n);\n\nLoader.defaultProps = {\n  className: undefined\n};\n\nexport default Loader;\n","import React, { useEffect, useState } from \"react\";\nimport { getChatLog } from \"./service\";\nimport Layout from \"./components/Layout\";\nimport Chat from \"./components/Chat\";\nimport Message from \"./components/Message\";\nimport Loader from \"./components/Loader\";\nimport { memoDate } from \"./utils/utils\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const chatDiv = React.createRef();\n\n  useEffect(() => {\n    const getData = async () => {\n      const data = await getChatLog();\n      setData(data);\n      setIsLoading(false);\n    };\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (chatDiv.current) {\n      chatDiv.current.scrollIntoView();\n    }\n  }, [chatDiv]);\n\n  const addBreakLine = memoDate();\n\n  const messages = data.map((m, i) => (\n    <React.Fragment key={m.messageId}>\n      {addBreakLine(m.timestamp)}\n      {console.log(typeof i)}\n      <Message msg={m} />\n    </React.Fragment>\n  ));\n\n  return (\n    <Layout>\n      {isLoading ? <Loader /> : <Chat ref={chatDiv}>{messages}</Chat>}\n    </Layout>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n\nhtml {\n    box-sizing: border-box;\n    height: 100%;\n}\n\n*, *::before, *::after {\n    box-sizing: inherit;\n}\n\n\nbody {\n    margin: 0;\n    height: 100%;\n    font-family: 'Nunito', sans-serif;\n}\n\n#root {\n    height: 100%;\n}\n\nh1, h2, h3, h4, h5, p {\n    margin: 0.2rem;\n  }\n\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport GlobalStyles from './utils/GlobalStyle';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <>\n    <App />\n    <GlobalStyles />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}